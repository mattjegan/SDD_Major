'Battle Wizards Pseudocode''Written by Matthew Egan'Last revised: 1st June 2013''Purpose: To describe the logic required to implement the game Battle Wizards'== Simplified BSD *** MODIFIED FOR NON-COMMERCIAL USE ONLY!!! *** =='Copyright (c) YEAR, OWNER'All rights reserved.''Redistribution and use in source and binary forms, with or without modification, are permitted 'provided that the following conditions are met:''    * Redistributions of source code must retain the above copyright notice, this list of '      conditions and the following disclaimer.'    * Redistributions in binary form must reproduce the above copyright notice, this list of '      conditions and the following disclaimer in the documentation and/or other materials '      provided with the distribution.'    * Any redistribution, use, or modification is done solely for personal benefit and not for '      any commercial purpose or for monetary gain without prior permission (See below)'Redistribution and use in source and binary forms, with modification, commercial use must gain 'prior permission through the original developer (Matthew Egan) via:''    * Email: matthewj.egan@hotmail.com'THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR 'IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 'AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 'CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 'CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 'SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 'THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 'OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 'POSSIBILITY OF SUCH DAMAGE.BEGIN MainProgram    GLOBAL window of size 1280px by 720px    running = True    GLOBAL currentScreen = "Title"    'App loop    WHILE running        CASEWHERE currentScreen ==            "Title": displayTitleScreen()            "Login":                 user = displayLoginScreen()            "NewUser":                 user = displayNewUserScreen()            "HighScores": displayHighScoreScreen()            "Help": displayHelpScreen()            "Game": playGame(user)            "Exit": running = False        ENDCASE        Render window    ENDWHILEEND MainProgram---BEGIN displayTitleScreen    'Event loop    FOR event = 1 TO numberOfRemainingEvents STEP 1        IF event == mousedown THEN            CASEWHERE mousedown ON                loginButton: currentScreen = "Login"                createUserButton: currentScreen = "NewUser"                highScoresButton: currentScreen = "HighScores"                helpButton: currentScreen = "Help"                exitButton: currentScreen = "Exit"                OTHERWISE: continue             ENDCASE        ENDIF     NEXT event    'Draw images to window    Load images from files    FOR imageNum = 1 TO numberOfRemainingImages STEP 1        Place images(imageNum) on window    NEXT imageNumEND displayTitleScreen---BEGIN displayLoginScreen(user)    password = ""    username = ""    showPass = False    'Event loop    FOR event = 1 TO numberOfRemainingEvents STEP 1        CASEWHERE event ==         mousedown:            CASEWHERE mousedown ON                confirmButton AND username != "" AND password != "":                     checkLogin(username, password, isValid)                    IF isValid == True THEN                        user = username                        currentScreen = "Game"                    ELSE                        Display "Invalid username or password"                    ENDIF                showPasswordCheckBox: showPass = True                exitButton: currentScreen = "Title"                OTHERWISE: continue             ENDCASE        keydown:            CASEWHERE keydown ON                usernameField:                     username = username + keydownValue                    Display username ON usernameField                passwordField:                     password = password + keydownValue                    IF showPass == True THEN                        Display password ON passwordField                    ELSE                        hiddenPass = lengthOfPassword * "*"                        Display hiddenPass ON passwordField                    ENDIF                OTHERWISE: continue            ENDCASE            ENDCASE     NEXT event    'Draw images to window    Load images from files    FOR imageNum = 1 TO numberOfRemainingImages STEP 1        Place image on window    NEXT imageNumEND displayLoginScreen---BEGIN checkLogin(username, password, isValid)    Open userFile    Load userFile into array userData    Close userFile    Set line = 1    Set found = False    WHILE line <= lengthOfUserData AND found == False THEN        Set scannedUser = ""        currentLine = userData(line)        FOR character = 1 TO lengthOfLine STEP 1            IF line(character) <> ";" THEN                scannedUser = scannerUser + line(character)            ELSE                IF scannedUser == username THEN                    Set scannedPass = ""                    FOR passChar = character + 1 TO lengthOfLine                        IF passChar <> ";" THEN                            scannedPass = scannedPass + line(passChar)                        ELSE                            found = True                        ENDIF                    NEXT passChar                ENDIF            ENDIF        NEXT character        line = line + 1    ENDWHILE    IF username == scannedUser AND password == scannedPass THEN        isValid = True    ELSE        isValid = False    ENDIF    'If the username and/or password is invalid then the game screen will not load and the user will be notified of an invalid username/passwordEND checkLogin---BEGIN displayNewUserScreen(user)    'Event Loop    FOR event = 1 TO numberOfRemainingEvents STEP 1        CASEWHERE event ==         mousedown:            CASEWHERE mousedown ON                'username and password are values in the text fields on screen                confirmButton AND username != "" AND password != "":                     checkValidUser(username, password, isValid)                    CASEWHERE isValid                    == True:                         user = username                        currentScreen = "Game"                    > 1: Display "Invalid username"                    < 1: Display "Invalid password"                    ENDCASE                exitButton: currentScreen = "Title"                OTHERWISE: continue             ENDCASE        keydown:            CASEWHERE keydown ON                usernameField:                     Display keydownValue ON usernameField                    username = username + keydownValue                passwordField:                     Display keydownValue ON passwordField                    password = password + keydownValue                OTHERWISE: continue            ENDCASE            ENDCASE    NEXT event    'Draw images to window    Load images from files    FOR imageNum = 1 TO numberOfRemainingImages STEP 1        Place image on window    NEXT imageNumEND displayNewUserScreen---BEGIN checkValidUser(username, password, isValid)    CASEWHERE        lengthOfUsername >= 6 AND lengthOfPassword >= 6: isValid = True        lengthOfUsername < 6: isValid = 2        lengthOfPassword < 6: isValid = 0    ENDCASEEND checkValidUser---BEGIN displayHighScoreScreen    'Event Loop    FOR event = 1 TO numberOfRemainingEvents STEP 1        IF event == mousedown THEN            IF mousedown ON exitButton THEN                currentScreen = "Title"            ENDIF        ENDIF    NEXT event    dailyScores = sortDailyScores()    allScores = sortAllScores()    FOR i = 1 TO 10 STEP 1        Display dailyScores(i) ON window        Display allScores(i) ON window    NEXT iEND displayHighScoreScreen---BEGIN sortDailyScores(dailyScores)    Open scoreFile for reading    Get currentDate from OS    'Get all the scores submitted today    'Scores stored in format (user; score; date)    Read user, score, date from scoreFile    i = 1    WHILE not EOF        IF date == currentDate THEN            scores(i) = user, score, date            i = i + 1        ENDIF        Read user, score, date from scoreFile    ENDWHILE    'Sort scores    scores = insertionSort(scores)    'Prune array to top ten    FOR n = 1 TO 10 STEP 1        dailyScores(n) = scores(n)    NEXT nEND sortDailyScores---BEGIN sortAllScores(allScores)    Open scoreFile for reading    'Get all the scores submitted ever    'Scores stored in format (user; score; date)    scores = readFileIntoArray(scoreFile)    'Sort scores    scores = insertionSort(scores)    'Prune array to top ten    FOR n = 1 TO 10 STEP 1        allScores(n) = scores(n)    NEXT nEND sortAllScores---BEGIN insertionSort(array)    first = 1    last = lengthOfArray    positionOfNext = last - 1    WHILE positionOfNext >= first        next = array(positionOfNext)        current = positionOfNext        WHILE current < last AND next > array(current + 1)            'look for the position into which to insert the current score and shuffle the sorted elements along until we find it.            current = current + 1            array(current - 1) = array(current)        ENDWHILE        array(current) = next        'put the current score to be sorted into its correct place        positionOfNext = positionOfNext - 1        'effectively shorten the length of the unsorted position of the array    ENDWHILEEND insertionSort---BEGIN displayHelpScreen    'Event loop    FOR event = 1 TO numberOfRemainingEvents STEP 1        IF event == mousedown THEN            IF mousedown ON exitButton THEN                currentScreen = "Title"            ENDIF        ENDIF     NEXT event    'Draw images to window    Load images from files    FOR imageNum = 1 TO numberOfRemainingImages STEP 1        Place images(imageNum) on window    NEXT imageNumEND displayHelpScreen---BEGIN playGame(user)    score = playScrollingTextGame()    avatar = openStoreScreen(score)    playBattleScene(avatar)    submitScore(user, score)    currentScreen = "Title"END playGame---BEGIN playScrollingTextGame(score)    running = True    score = 0    wordList = readFileIntoArray("wordList.txt")    wordList = sattoloShuffle(wordList)    Get startTime from OS    currentWord = ""    'Game Loop    WHILE running        'Event Loop        FOR event = 1 TO numberOfRemainingEvents STEP 1            IF event == keydown THEN                Display keydownValue ON window                currentWord = currentWord + keydownValue            ENDIF        NEXT event        'Draw words to window        FOR wordNum = 1 TO lengthOfWordList STEP 1            Draw wordList(wordNum) on window        NEXT wordNum        IF currentWord ON window THEN            deleteElement(currentWord, wordList)            currentWord = ""            score = score + 1        ENDIF        Get currentTime from OS        elapsedTime = currentTime - startTime        'Assume time is measured in seconds        IF elapsedTime >= 30 THEN            running = False        ENDIF    ENDWHILEEND playScrollingTextGame---BEGIN readFileIntoArray(filename, fileArray)    Open filename    lineCount = 1    Read line from filename    WHILE not EOF        fileArray(linecount) = line        Read line from filename        linecount = linecount + 1    ENDWHILEEND readFileIntoArray---BEGIN sattoloShuffle(array)    i = lenghtOfArray    WHILE i > 1        i = i - 1        j = Random(i)         swap(array(j), array(i))    ENDWHILEEND sattoloShuffle---BEGIN swap(a, b)    temp = a    a = b    b = tempEND swap---BEGIN deleteElement(element, array)    linearSearch(element, array, index)    array(index) = ""END deleteElement---BEGIN linearSearch(searchTerm, array, index)    index = 1    found = False    WHILE found == False AND index <= lengthOfArray        IF array(index) != searchTerm THEN            index = index + 1        ELSE            found = True        ENDIF    ENDWHILE    IF not found THEN        index = lengthOfArray + 1    ENDIFEND linearSearch---BEGIN openStoreScreen(score, avatar)    running = True    points = score    Create avatar from RECORD Avatar    avatar.strength = 1    avatar.magic = 1    avatar.armor = 1    WHILE running        'Event Loop        FOR event = 1 TO numberOfRemainingEvents STEP 1            IF event == mousedown THEN                CASEWHERE mousedown ON                    strengthUp:                        IF points >= (avatar.strength*2) THEN                            points = points - (avatar.strength*2)                            avatar.strength = avatar.strength + 1                        ELSE                            Display "You did not earn enough points"                        ENDIF                    magicUp:                        IF points >= (avatar.magic*2) THEN                            points = points - (avatar.magic*2)                            avatar.magic = avatar.magic + 1                        ELSE                            Display "You did not earn enough points"                        ENDIF                    armorUp:                        IF points >= (avatar.armor*2) THEN                            points = points - (avatar.armor*2)                            avatar.armor = avatar.armor + 1                        ELSE                            Display "You did not earn enough points"                        ENDIF                ENDCASE            ENDIF        NEXT event        Display points on window        'Draw images to window        Load images from files        FOR imageNum = 1 TO numberOfRemainingImages STEP 1            Place image on window        NEXT imageNum    ENDWHILEEND openStoreScreen---BEGIN RECORD Avatar    strength as Integer    magic as Integer    armor as IntegerEND RECORD Avatar---BEGIN playBattleScene(avatar)    IF avatar.strength >= 3 THEN        Place characterWithSword on window    ELSE        IF avatar.magic >= 3 THEN            Place characterWithWand on window        ELSE            Place characterWithArmor on window        ENDIF    ENDIF    animationRunning = True    rotateUp = 0    WHILE animationRunning        'Pause the script for 0.5 seconds to simulate motion        PauseScript(0.5)        IF (rotateUp % 2) == 0 THEN            Rotate character anti-clockwise 30 degrees        ELSE            Rotate character clockwise 30 degrees        ENDIF        rotateUp = rotateUp + 1        IF rotateUp == 20 THEN            animationRunning = False        ENDIF        'Draw images to window        Load images from files        FOR imageNum = 1 TO numberOfRemainingImages STEP 1            Place image on window        NEXT imageNum    ENDWHILEEND playBattleScreen---BEGIN submitScore(user, score)    Open scoreFile for append    Get currentDate from OS    'Scores stored in format (user; score; date)    Write scoreFile from user, score, currentDate    Close scoreFileEND submitScore---